
create database chhavi
CONNECT TO CHHAVI
CREATE SCHEMA S

CREATE TABLE S.USER ( USERNAME VARCHAR(20) NOT NULL CHECK (LENGTH(USERNAME) > 2 ), FNAME VARCHAR(20) NOT NULL CHECK (LENGTH(FNAME) > 2), LNAME VARCHAR(20) NOT NULL CHECK (LENGTH(LNAME) > 2), PWORD VARCHAR(20) NOT NULL CHECK (LENGTH(PWORD) > 5), EMAIL VARCHAR(30) NOT NULL UNIQUE CHECK (EMAIL LIKE '%@%' and email like '%.%' ), GENDER CHAR NOT NULL CHECK (GENDER IN ('M','F','U')), DOB DATE, FPQ VARCHAR(50) NOT NULL CHECK (LENGTH(FPQ) > 2), FPA VARCHAR(20) NOT NULL CHECK (LENGTH(FPA) > 2), M VARCHAR(15) CHECK (LENGTH(M) > 9) , NUMIMAGES INT NOT NULL DEFAULT 0, NUMFRS INT NOT NULL DEFAULT 0, NUMFES INT NOT NULL DEFAULT 0,p_image blob, PRIMARY KEY(USERNAME) )
CREATE TABLE S.ALBUM ( AUSERNAME VARCHAR(20) NOT NULL, FOREIGN KEY (AUSERNAME) REFERENCES S.USER(USERNAME) ON DELETE CASCADE, ALNAME VARCHAR(20) NOT NULL with default 'UNSPECIFIED' CHECK (LENGTH(ALNAME) > 2 ), PRIMARY KEY(AUSERNAME,ALNAME) )


CREATE TABLE S.IMAGE ( ID INT NOT NULL, IMAGEDATA BLOB(2M), UPTIME TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP, PLACE VARCHAR(20) NOT NULL WITH DEFAULT 'UNSPECIFIED', CAPTION VARCHAR(140) NOT NULL WITH DEFAULT ' ', COPYRIGHT VARCHAR(15) NOT NULL WITH DEFAULT 'UNSPECIFIED', HEIGHT INT NOT NULL CHECK (HEIGHT>50), WIDTH INT NOT NULL CHECK (WIDTH >50), VIEWS INT NOT NULL DEFAULT 1, PULSE INT NOT NULL DEFAULT 0, LIKES INT NOT NULL DEFAULT 0, CATEGORY INT NOT NULL DEFAULT 0, VISIBLE_TO INT NOT NULL DEFAULT 2, IAUSERNAME VARCHAR(20) NOT NULL, IALNAME VARCHAR(20) NOT NULL, CONSTRAINT FK1 FOREIGN KEY(IAUSERNAME,IALNAME) REFERENCES S.ALBUM(AUSERNAME,ALNAME) on delete cascade,iusername varchar(20) not null, CONSTRAINT FK2 FOREIGN KEY (IUSERNAME) REFERENCES S.USER(USERNAME), PRIMARY KEY(ID))
CREATE TABLE S.VIEWS( VUSERNAME VARCHAR(20) NOT NULL, FOREIGN KEY (VUSERNAME) REFERENCES S.USER(USERNAME) ON DELETE CASCADE, VID INT NOT NULL, FOREIGN KEY (VID) REFERENCES S.IMAGE(ID) ON DELETE CASCADE, PRIMARY KEY(VUSERNAME,VID))
CREATE TABLE S.LIKES( LUSERNAME VARCHAR(20) NOT NULL, FOREIGN KEY (LUSERNAME) REFERENCES S.USER(USERNAME) ON DELETE CASCADE, LID INT NOT NULL, FOREIGN KEY (LID) REFERENCES S.IMAGE(ID) ON DELETE CASCADE, PRIMARY KEY(LUSERNAME,LID))
CREATE TABLE S.FOLLOWS( FRUSERNAME VARCHAR(20) NOT NULL, FEUSERNAME VARCHAR(20) NOT NULL, FOREIGN KEY (FRUSERNAME) REFERENCES S.USER(USERNAME) ON DELETE CASCADE, FOREIGN KEY (FEUSERNAME) REFERENCES S.USER(USERNAME) ON DELETE CASCADE, PRIMARY KEY(FRUSERNAME,FEUSERNAME))
Create table S.TAGS(TID INT NOT NULL, TAG VARCHAR(20) NOT NULL, FOREIGN KEY(TID) REFERENCES S.IMAGE(ID) on delete cascade, PRIMARY KEY(TID,TAG))


CREATE PROCEDURE S.UPDATE_LIKES (IN IN_ID INT, IN UP_D SMALLINT) LANGUAGE SQL BEGIN IF UP_D = 1 THEN UPDATE S.IMAGE SET LIKES=LIKES+1 WHERE ID=IN_ID; ELSE UPDATE S.IMAGE SET LIKES=LIKES-1 WHERE ID=IN_ID; END IF; END
 
CREATE PROCEDURE S.UPDATE_PULSE (IN IN_ID INT) LANGUAGE SQL BEGIN UPDATE S.IMAGE SET PULSE=(100*LIKES/VIEWS) WHERE ID=IN_ID; END

create trigger AUTO_view_PULSE after INSERT ON S.VIEWS REFERENCING NEW AS NEW_VAL FOR EACH ROW MODE DB2SQL begin atomic update S.IMAGE set VIEWS=VIEWS+1 WHERE NEW_VAL.VID = S.IMAGE.ID; CALL S.UPDATE_PULSE(NEW_VAL.VID); end
create trigger AUTO_LIKE_PULSE after INSERT ON S.LIKES REFERENCING NEW AS NEW_VAL FOR EACH ROW MODE DB2SQL begin CALL S.UPDATE_LIKES(NEW_VAL.LID,1); CALL S.UPDATE_PULSE(NEW_VAL.LID); end
create trigger AUTO_LIKE_PULSE_DEL after DELETE ON S.LIKES REFERENCING OLD AS OLD_VAL FOR EACH ROW MODE DB2SQL begin CALL S.UPDATE_LIKES(OLD_VAL.LID,2); CALL S.UPDATE_PULSE(OLD_VAL.LID); end
CREATE TRIGGER AUTO_UPDATE_F_IN AFTER INSERT ON S.FOLLOWS REFERENCING NEW AS NEW_VAL FOR EACH ROW MODE DB2SQL begin UPDATE S.USER SET NUMFES=NUMFES+1 WHERE NEW_VAL.FRUSERNAME = USERNAME; UPDATE S.USER SET NUMFRS=NUMFRS+1 WHERE NEW_VAL.FEUSERNAME = USERNAME; end
CREATE TRIGGER AUTO_UPDATE_F_DEL AFTER DELETE ON S.FOLLOWS REFERENCING OLD AS OLD_VAL FOR EACH ROW MODE DB2SQL begin UPDATE S.USER SET NUMFES=NUMFES-1 WHERE OLD_VAL.FRUSERNAME = USERNAME; UPDATE S.USER SET NUMFRS=NUMFRS-1 WHERE OLD_VAL.FEUSERNAME = USERNAME; end
CREATE TRIGGER UPDATE_NOIMAGES_IN AFTER INSERT ON S.IMAGE REFERENCING NEW AS NEW_VAL FOR EACH ROW MODE DB2SQL begin UPDATE S.USER SET NUMIMAGES=NUMIMAGES+1 WHERE NEW_VAL.IAUSERNAME = USERNAME; end
CREATE TRIGGER UPDATE_NOIMAGES_DEL AFTER DELETE ON S.IMAGE REFERENCING OLD AS OLD_VAL FOR EACH ROW MODE DB2SQL begin UPDATE S.USER SET NUMIMAGES=NUMIMAGES-1 WHERE OLD_VAL.IAUSERNAME = USERNAME; end
